{
  "name": "nab-al-tools",
  "displayName": "NAB AL Tools",
  "description": "Development and translation management tool for AL language and Microsoft Dynamics 365 Business Central extensions.",
  "version": "1.43.510051835",
  "publisher": "nabsolutions",
  "repository": {
    "type": "git",
    "url": "https://github.com/jwikman/nab-al-tools"
  },
  "license": "MIT",
  "keywords": [
    "multi-root ready",
    "Dynamics NAV",
    "Dynamics 365 Business Central",
    "AL",
    "XLIFF",
    "XLF",
    "ERP"
  ],
  "author": {
    "url": "https://www.nabsolutions.se",
    "name": "Johannes Wikman"
  },
  "contributors": [
    {
      "name": "Johannes Wikman",
      "url": "https://www.nabsolutions.se"
    },
    {
      "name": "Alexander Jangmo",
      "url": "https://www.nabsolutions.se"
    }
  ],
  "icon": "icon.png",
  "bugs": {
    "url": "https://github.com/jwikman/nab-al-tools/issues"
  },
  "engines": {
    "vscode": "^1.102.0",
    "node": "^20.0.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:al",
    "workspaceContains:app.json",
    "workspaceContains:al.template.json",
    "onCommand:al.go"
  ],
  "main": "./dist/nab-al-tools.js",
  "contributes": {
    "menus": {
      "commandPalette": [
        {
          "command": "nab.FindTranslatedTexts",
          "when": "editorLangId == al"
        },
        {
          "command": "nab.FindSourceOfCurrentTranslationUnit",
          "when": "editorLangId == xml && resourceExtname == .xlf"
        }
      ],
      "editor/context": [
        {
          "command": "nab.FindTranslatedTexts",
          "group": "navigation",
          "when": "editorLangId == al && editorTextFocus"
        },
        {
          "command": "nab.FindSourceOfCurrentTranslationUnit",
          "group": "navigation",
          "when": "editorLangId == xml && resourceExtname == .xlf"
        },
        {
          "command": "nab.editXliffDocument",
          "group": "navigation",
          "when": "editorLangId == xml && resourceExtname == .xlf"
        }
      ],
      "explorer/context": [
        {
          "command": "nab.editXliffDocument",
          "group": "navigation",
          "when": "resourceExtname == .xlf"
        }
      ]
    },
    "commands": [
      {
        "command": "nab.AddXmlCommentBold",
        "title": "NAB: XML Comment - Format bold",
        "enablement": "editorLangId == al"
      },
      {
        "command": "nab.AddXmlCommentItalic",
        "title": "NAB: XML Comment - Format italic",
        "enablement": "editorLangId == al"
      },
      {
        "command": "nab.AddXmlCommentCode",
        "title": "NAB: XML Comment - Format inline code",
        "enablement": "editorLangId == al"
      },
      {
        "command": "nab.AddXmlCommentCodeBlock",
        "title": "NAB: XML Comment - Format code block",
        "enablement": "editorLangId == al"
      },
      {
        "command": "nab.AddXmlCommentPara",
        "title": "NAB: XML Comment - Format paragraph",
        "enablement": "editorLangId == al"
      },
      {
        "command": "nab.RefreshXlfFilesFromGXlf",
        "title": "NAB: Refresh XLF files from g.xlf"
      },
      {
        "command": "nab.FormatCurrentXlfFileForDTS",
        "title": "NAB: Format current XLF file for DTS"
      },
      {
        "command": "nab.OpenDTS",
        "title": "NAB: Open DTS (Dynamics 365 Translation Service)"
      },
      {
        "command": "nab.ImportDtsTranslations",
        "title": "NAB: Import DTS Translations"
      },
      {
        "command": "nab.FindNextUntranslatedText",
        "title": "NAB: Find next untranslated text"
      },
      {
        "command": "nab.SetTranslationUnitToTranslated",
        "title": "NAB: Set Translation Unit to \"translated\""
      },
      {
        "command": "nab.SetTranslationUnitToSignedOff",
        "title": "NAB: Set Translation Unit to \"signed-off\""
      },
      {
        "command": "nab.SetTranslationUnitToFinal",
        "title": "NAB: Set Translation Unit to \"final\""
      },
      {
        "command": "nab.MatchFromXlfFile",
        "title": "NAB: Match translations from external XLF file"
      },
      {
        "command": "nab.FindAllUntranslatedText",
        "title": "NAB: Find untranslated texts"
      },
      {
        "command": "nab.FindMultipleTargets",
        "title": "NAB: Find multiple targets in XLF files"
      },
      {
        "command": "nab.FindTranslatedTexts",
        "title": "NAB: Find translated texts of current line",
        "category": "navigation"
      },
      {
        "command": "nab.MatchTranslations",
        "title": "NAB: Match Translations"
      },
      {
        "command": "nab.matchTranslationsFromBaseApplication",
        "title": "NAB: Match Translations From Base Application"
      },
      {
        "command": "nab.SortXlfFiles",
        "title": "NAB: Sort XLF files as g.xlf"
      },
      {
        "command": "nab.CopySourceToTarget",
        "title": "NAB: Copy <source> to <target>"
      },
      {
        "command": "nab.CopyAllSourceToTarget",
        "title": "NAB: Copy all <source> to untranslated <target>"
      },
      {
        "command": "nab.FindSourceOfCurrentTranslationUnit",
        "title": "NAB: Find source of current Translation Unit",
        "category": "navigation"
      },
      {
        "command": "nab.downloadBaseAppTranslationFiles",
        "title": "NAB: Download Base App Translation files"
      },
      {
        "command": "nab.UpdateGXlfFile",
        "title": "NAB: Update g.xlf"
      },
      {
        "command": "nab.UpdateAllXlfFiles",
        "title": "NAB: Update all XLF files"
      },
      {
        "command": "nab.SuggestToolTips",
        "title": "NAB: Suggest ToolTips"
      },
      {
        "command": "nab.ShowSuggestedToolTip",
        "title": "NAB: Show next suggested ToolTip"
      },
      {
        "command": "nab.GenerateToolTipDocumentation",
        "title": "NAB: Generate ToolTip Documentation"
      },
      {
        "command": "nab.GenerateExternalDocumentation",
        "title": "NAB: Generate External Documentation"
      },
      {
        "command": "nab.UninstallDependencies",
        "title": "NAB: Uninstall dependent apps"
      },
      {
        "command": "nab.SignAppFile",
        "title": "NAB: Sign app file"
      },
      {
        "command": "nab.DeployAndRunTestTool",
        "title": "NAB: Deploy and Run TestTool with Debugger"
      },
      {
        "command": "nab.editXliffDocument",
        "title": "NAB: Edit Xliff Document"
      },
      {
        "command": "nab.DeployAndRunTestToolNoDebug",
        "title": "NAB: Deploy and Run TestTool without Debugger"
      },
      {
        "command": "nab.createNewTargetXlf",
        "title": "NAB: Create translation XLF for new language"
      },
      {
        "command": "nab.exportTranslationsCSV",
        "title": "NAB: Export Translations to .csv"
      },
      {
        "command": "nab.exportTranslationsCSVColumnSelect",
        "title": "NAB: Export Translations to .csv (Select columns and filter)"
      },
      {
        "command": "nab.importTranslationCSV",
        "title": "NAB: Import Translations from .csv"
      },
      {
        "command": "nab.createCrossLanguageXlf",
        "title": "NAB: Create XLF with selected Source Language"
      },
      {
        "command": "nab.importTranslationsById",
        "title": "NAB: Import Translations by Id"
      },
      {
        "command": "nab.convertToPermissionSet",
        "title": "NAB: Convert to PermissionSet objects"
      },
      {
        "command": "nab.createProjectFromTemplate",
        "title": "NAB: Create AL Project from Template (preview)"
      },
      {
        "command": "nab.renumberALObjects",
        "title": "NAB: Renumber AL objects"
      },
      {
        "command": "nab.createPermissionSetForAllObjects",
        "title": "NAB: Create PermissionSet for all objects"
      },
      {
        "command": "nab.troubleshootParseCurrentFile",
        "title": "NAB: Troubleshoot - Parse current file",
        "enablement": "config.NAB.EnableTroubleshootingCommands"
      },
      {
        "command": "nab.troubleshootParseAllFiles",
        "title": "NAB: Troubleshoot - Parse current project",
        "enablement": "config.NAB.EnableTroubleshootingCommands"
      },
      {
        "command": "nab.troubleshootFindTransUnitsWithoutSource",
        "title": "NAB: Troubleshoot - Find TransUnits without source",
        "enablement": "config.NAB.EnableTroubleshootingCommands"
      },
      {
        "command": "nab.reportIssue",
        "title": "NAB: Report Issue"
      },
      {
        "command": "nab.CopilotInlineChat",
        "title": "NAB: Start Copilot Inline Chat with predefined prompts"
      },
      {
        "command": "nab.showMcpServerInfo",
        "title": "NAB: Show MCP Server Information"
      }
    ],
    "keybindings": [
      {
        "command": "nab.FindSourceOfCurrentTranslationUnit",
        "key": "F12",
        "when": "editorLangId == xml && resourceExtname == .xlf"
      },
      {
        "command": "nab.FindNextUntranslatedText",
        "key": "Ctrl+Alt+U"
      },
      {
        "command": "nab.SetTranslationUnitToTranslated",
        "key": "Ctrl+Alt+Q"
      },
      {
        "command": "nab.SetTranslationUnitToSignedOff",
        "key": "Ctrl+Alt+S"
      },
      {
        "command": "nab.ShowSuggestedToolTip",
        "key": "Ctrl+Alt+P"
      },
      {
        "command": "nab.UpdateAllXlfFiles",
        "key": "Ctrl+Alt+Shift+B"
      },
      {
        "command": "nab.CopilotInlineChat",
        "key": "Ctrl+Alt+C"
      }
    ],
    "snippets": [
      {
        "language": "al",
        "path": "./snippets/tests.json"
      },
      {
        "language": "al",
        "path": "./snippets/misc.json"
      }
    ],
    "configuration": [
      {
        "title": "General",
        "properties": {
          "NAB.EnableTelemetry": {
            "type": "boolean",
            "default": true,
            "description": "Specifies if anonymous telemetry can be sent to the developer. It is recommended to leave this on, so that the usage of this extension can be analyzed and the work effort can focus on the most used features. VSCode must be restarted to apply any changes to this setting.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Translation",
        "properties": {
          "NAB.MatchTranslation": {
            "type": "boolean",
            "default": true,
            "description": "If enabled, the \"NAB: Refresh XLF files from g.xlf\" function tries to match sources in the translated xlf file to reuse translations. A found match of \"source\" is then prefixed with [NAB: SUGGESTION] for manual review. If several matches are found, all matches are added and you need delete the ones you do not want. Use \"NAB: Find next untranslated text\" (Ctrl+Alt+U) or \"NAB: Find multiple targets in XLF files\" to review all matches. This feature only works if \"UseExternalTranslationTool\" is disabled.",
            "scope": "resource"
          },
          "NAB.MatchBaseAppTranslation": {
            "type": "boolean",
            "default": true,
            "description": "If enabled, the \"NAB: Refresh XLF files from g.xlf\" function tries to match sources in the translated xlf file with translations from the BaseApplication. A found match of \"source\" is then prefixed with [NAB: SUGGESTION] for manual review. If several matches are found, all matches are added and you need delete the ones you do not want. Use \"NAB: Find next untranslated text\" (Ctrl+Alt+U) or \"NAB: Find multiple targets in XLF files\" to review all matches. This feature only works if \"UseExternalTranslationTool\" is disabled.",
            "scope": "resource"
          },
          "NAB.TranslationSuggestionPaths": {
            "type": "array",
            "description": "Supply any relative or absolute paths that contains xlf files that should be used when matching translations. The \"NAB: Refresh XLF files from g.xlf\" function will try to match any untranslated targets with targets in the xlf files in the provided folders that has matching target language.",
            "scope": "resource"
          },
          "NAB.AutoAcceptSuggestions": {
            "type": "boolean",
            "default": false,
            "description": "If enabled, the first suggestion (if any) from the \"NAB: Refresh XLF files from g.xlf\" function will be automatically accepted. This is only applicable when \"NAB.UseExternalTranslationTool\" is disabled.",
            "scope": "resource"
          },
          "NAB.ShowXlfHighlights": {
            "type": "boolean",
            "default": true,
            "description": "If this enabled, [NAB: *] tags will be highlighted in the xlf files.",
            "scope": "resource"
          },
          "NAB.XlfHighlightsDecoration": {
            "type": "object",
            "default": {
              "borderWidth": "1px",
              "borderRadius": "0px",
              "borderStyle": "dotted",
              "overviewRulerLane": 2,
              "light": {
                "overviewRulerColor": "orange",
                "borderColor": "orange",
                "backgroundColor": "rgba(200, 200, 100, 0.50)"
              },
              "dark": {
                "overviewRulerColor": "yellow",
                "borderColor": "yellow",
                "backgroundColor": "rgba(200, 200, 100, 0.10)"
              }
            },
            "description": "Defines the decorations that will highlight [NAB: *] if activated.",
            "scope": "resource"
          },
          "NAB.UseExternalTranslationTool": {
            "type": "boolean",
            "default": false,
            "description": "Modifies the state attribute of the translation unit target when running 'NAB: Refresh XLF files from g.xlf', instead of inserting a searchable string. Useful when working with external translation tools.",
            "scope": "resource"
          },
          "NAB.SetExactMatchToState": {
            "type": "string",
            "default": "translated",
            "description": "Specifies that when working with the target state attributes (\"NAB.UseExternalTranslationTool\": true) and this is set to a target state value, when executing the \"NAB: Refresh XLF files from g.xlf\" function and an exact match is found, the target state will be set to the configured state and the state-qualifier will be set to \"exact-match\".",
            "scope": "resource",
            "enum": [
              "translated",
              "signed-off",
              "final",
              "new",
              "needs-review-translation",
              "needs-translation",
              "needs-adaptation",
              "needs-l10n",
              "needs-review-adaptation",
              "needs-review-l10n"
            ],
            "enumDescriptions": [
              "Sets the Target State to 'translated'",
              "Sets the Target State to 'signed-off'",
              "Sets the Target State to 'final'",
              "Sets the Target State to 'new'",
              "Sets the Target State to 'needs-review-translation'",
              "Sets the Target State to 'needs-translation'",
              "Sets the Target State to 'needs-adaptation'",
              "Sets the Target State to 'needs-l10n'",
              "Sets the Target State to 'needs-review-adaptation'",
              "Sets the Target State to 'needs-review-l10n'"
            ]
          },
          "NAB.ClearTargetWhenSourceHasChanged": {
            "type": "boolean",
            "default": false,
            "description": "If enabled, the target will be set to a blank value if the source has been changed when the \"NAB: Refresh XLF files from g.xlf\" function is being executed. The target state will be set to \"needs-translation\". This is only applicable when \"NAB.UseExternalTranslationTool\" is enabled.",
            "scope": "resource"
          },
          "NAB.DetectInvalidTargets": {
            "type": "boolean",
            "default": true,
            "description": "When this is enabled, some common translation mistakes are detected. Eg. same number of OptionCaptions, blank OptionCaptions, placeholders as '@1@@@@@@' or '#2########'. The detection will occur during several different actions, as Import from DTS or Refresh Xlf",
            "scope": "resource"
          },
          "NAB.UseDTS": {
            "type": "boolean",
            "default": false,
            "description": "When using Dynamics 365 Translation Service, this setting makes the xliff align better with how DTS updates the xliff files.",
            "scope": "resource",
            "deprecationMessage": "This setting is deprecated and will be removed in a future version. (Read more at https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/removed-deprecated-features-platform-updates)"
          },
          "NAB.DTS ProjectId": {
            "type": "string",
            "default": "",
            "description": "Specifies the ID that is shown in the URL when using Dynamics 365 Translation Service. This ID is used when opening DTS from within VSCode.",
            "scope": "resource",
            "deprecationMessage": "This setting is deprecated and will be removed in a future version. (Read more at https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/removed-deprecated-features-platform-updates)"
          },
          "NAB.Set DTS Exact Match To State": {
            "type": "string",
            "default": "(keep)",
            "description": "When using Dynamics 365 Translation Service and this is set to anything else than (keep), when importing translations from DTS and the source state is \"translated\" and state-qualifier is \"exact-match\" or \"x-microsoft-exact-match\", the target state will automatically be set to the configured state and the state-qualifier will be cleared.",
            "scope": "resource",
            "enum": [
              "(keep)",
              "translated",
              "signed-off",
              "final",
              "new",
              "needs-review-translation",
              "needs-translation",
              "needs-adaptation",
              "needs-l10n",
              "needs-review-adaptation",
              "needs-review-l10n"
            ],
            "enumDescriptions": [
              "Do not change the Target State or State Qualifier",
              "Sets the Target State to 'translated'",
              "Sets the Target State to 'signed-off'",
              "Sets the Target State to 'final'",
              "Sets the Target State to 'new'",
              "Sets the Target State to 'needs-review-translation'",
              "Sets the Target State to 'needs-translation'",
              "Sets the Target State to 'needs-adaptation'",
              "Sets the Target State to 'needs-l10n'",
              "Sets the Target State to 'needs-review-adaptation'",
              "Sets the Target State to 'needs-review-l10n'"
            ],
            "deprecationMessage": "This setting is deprecated and will be removed in a future version. (Read more at https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/removed-deprecated-features-platform-updates)"
          },
          "NAB.useDictionaryInDTSImport": {
            "type": "boolean",
            "default": true,
            "description": "Toggles usage of substitution dictionary when importing translation files from DTS.",
            "scope": "resource",
            "deprecationMessage": "This setting is deprecated and will be removed in a future version. (Read more at https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/removed-deprecated-features-platform-updates)"
          },
          "NAB.PreserveOriginalAttribute": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, the 'original' attribute in translated XLIFF files will match the 'original' attribute from the source .g.xlf file (e.g., 'MyApp'). When disabled (default), the 'original' attribute will include the .g.xlf file extension (e.g., 'MyApp.g.xlf') for compatibility with Dynamics Translation Service. Enable this setting if you're using translation tools like Crowdin that require matching 'original' attributes between source and target files.",
            "scope": "resource"
          },
          "NAB.SearchReplaceBeforeSaveXliff": {
            "type": "array",
            "default": [],
            "description": "Specifies if one or more Regular Expression Search & Replace should be performed on the XLF file before it is being saved to disk after being modified by this extension. Eg. this would affect the result after the \"NAB: Refresh XLF files from g.xlf\" has been executed.",
            "items": {
              "description": "Specifies a Regular Expression Search & Replace setting",
              "properties": {
                "searchFor": {
                  "type": "string",
                  "description": "The Regular Expression to search for."
                },
                "replaceWith": {
                  "type": "string",
                  "description": "The replacement text to replace anything that matched the expression defined in \"SearchFor\". Regular Expression Group replacements (like $1) is supported."
                }
              }
            },
            "scope": "resource"
          },
          "NAB.LanguageCodesInComments": {
            "type": "array",
            "default": [],
            "description": "Specifies the mappings between language tags (the target-language attribute in the xliff file) and three letter abbreviation used in comments in the al code. If a language tag that matches the target-language of the xliff file is found in the comments, the translation will be added to the xliff file. This is used when the \"NAB: Refresh XLF files from g.xlf\" function is executed.",
            "items": {
              "description": "Specifies a Regular Expression Search & Replace setting",
              "properties": {
                "languageTag": {
                  "type": "string",
                  "description": "The language tag that should match the target-language attribute in the xliff file.",
                  "examples": [
                    "bg-BG",
                    "zh-TW",
                    "cs-CZ",
                    "da-DK",
                    "de-DE",
                    "el-GR",
                    "en-US",
                    "es-ES",
                    "fi-FI",
                    "fr-FR",
                    "hu-HU",
                    "is-IS",
                    "it-IT",
                    "ja-JP",
                    "ko-KR",
                    "nl-NL",
                    "nb-NO",
                    "pl-PL",
                    "pt-BR",
                    "ro-RO",
                    "ru-RU",
                    "hr-HR",
                    "sk-SK",
                    "sv-SE",
                    "th-TH",
                    "tr-TR",
                    "uk-UA",
                    "sl-SI",
                    "et-EE",
                    "lv-LV",
                    "lt-LT",
                    "vi-VN",
                    "zh-CN",
                    "de-CH",
                    "en-GB",
                    "es-MX",
                    "fr-BE",
                    "it-CH",
                    "nl-BE",
                    "pt-PT",
                    "zh-HK",
                    "de-AT",
                    "en-AU",
                    "es-ES",
                    "fr-CA",
                    "en-CA",
                    "fr-CH",
                    "en-NZ",
                    "en-ZA",
                    "sr-Latn-RS"
                  ]
                },
                "threeLetterAbbreviation": {
                  "type": "string",
                  "description": "The three letter abbreviation used in comments in the al code."
                }
              }
            },
            "scope": "resource"
          },
          "NAB.SkipTranslationPropertyForLanguage": {
            "type": "array",
            "default": [],
            "description": "Specifies if one or more translation properties should be skipped for a specific language. This is useful when you do not want to translate a specific property for a specific language. For example, if you do not want to translate ToolTips or AboutTitle/AboutText in all languages. Use the `keepTranslated` property of this setting if you want to keep the translation unit if it is already translated, or if it gets a match from another translation from BaseApp, current xlf or any other configured source. When running the app in Business Central, if a translation in the current language is missing, the text from the g.xlf file is used as fallback. This setting is used when the \"NAB: Refresh XLF files from g.xlf\" function is executed.",
            "items": {
              "description": "Specifies the settings per language",
              "properties": {
                "languageTag": {
                  "type": "string",
                  "description": "The language tag that this setting should apply to. This is matched against the target-language attribute in the xliff file.",
                  "examples": [
                    "bg-BG",
                    "zh-TW",
                    "cs-CZ",
                    "da-DK",
                    "de-DE",
                    "el-GR",
                    "en-US",
                    "es-ES",
                    "fi-FI",
                    "fr-FR",
                    "hu-HU",
                    "is-IS",
                    "it-IT",
                    "ja-JP",
                    "ko-KR",
                    "nl-NL",
                    "nb-NO",
                    "pl-PL",
                    "pt-BR",
                    "ro-RO",
                    "ru-RU",
                    "hr-HR",
                    "sk-SK",
                    "sv-SE",
                    "th-TH",
                    "tr-TR",
                    "uk-UA",
                    "sl-SI",
                    "et-EE",
                    "lv-LV",
                    "lt-LT",
                    "vi-VN",
                    "zh-CN",
                    "de-CH",
                    "en-GB",
                    "es-MX",
                    "fr-BE",
                    "it-CH",
                    "nl-BE",
                    "pt-PT",
                    "zh-HK",
                    "de-AT",
                    "en-AU",
                    "es-ES",
                    "fr-CA",
                    "en-CA",
                    "fr-CH",
                    "en-NZ",
                    "en-ZA",
                    "sr-Latn-RS"
                  ]
                },
                "keepTranslated": {
                  "type": "boolean",
                  "description": "If enabled, the translation unit will be kept if it is already translated or if it gets a match from another translation from BaseApp, current xlf or any other configured source. If disabled, the translation unit will be removed from the translated xliff file.",
                  "default": true
                },
                "skipTranslationProperties": {
                  "type": "array",
                  "description": "The translation properties that should be skipped for the selected language.",
                  "default": [
                    "Label",
                    "ReportLabel",
                    "OptionCaption",
                    "Caption",
                    "ToolTip",
                    "InstructionalText",
                    "PromotedActionCategories",
                    "RequestFilterHeading",
                    "AdditionalSearchTerms",
                    "EntityCaption",
                    "EntitySetCaption",
                    "ProfileDescription",
                    "AboutTitle",
                    "AboutText"
                  ],
                  "items": {
                    "type": "string",
                    "description": "The translation property that should be skipped for the selected language.",
                    "enum": [
                      "Label",
                      "ReportLabel",
                      "NamedType",
                      "Property",
                      "OptionCaption",
                      "Caption",
                      "ToolTip",
                      "InstructionalText",
                      "PromotedActionCategories",
                      "RequestFilterHeading",
                      "AdditionalSearchTerms",
                      "EntityCaption",
                      "EntitySetCaption",
                      "ProfileDescription",
                      "AboutTitle",
                      "AboutText"
                    ]
                  }
                }
              }
            },
            "scope": "resource"
          },
          "NAB.CopilotChatPrompts": {
            "type": "array",
            "default": [],
            "description": "Specifies a list of chat prompts that the user can select from when starting Copilot Inline Chats",
            "items": {
              "description": "Specifies a prompt for Copilot Inline Chats",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The description of the prompt."
                },
                "prompt": {
                  "type": "string",
                  "description": "The prompt that will be used in the chat. Use \\n for line breaks."
                }
              }
            },
            "scope": "resource"
          },
          "NAB.ReplaceSelfClosingXlfTags": {
            "type": "boolean",
            "default": true,
            "description": "Replaces self closing tags like <tag/> with a separate closing tag </tag>",
            "scope": "resource"
          },
          "NAB.SearchOnlyXlfFiles": {
            "type": "boolean",
            "default": false,
            "description": "If enabled, the \"NAB:Find Untranslated texts\" function only searches *.xlf files. Be aware of that the *.xlf file filter remains in \"Find in Files\" after this command has been run. This should be enabled in large projects (as Base Application) for performance reasons.",
            "scope": "resource"
          },
          "NAB.RefreshXlfAfterFindNextUntranslated": {
            "type": "boolean",
            "default": true,
            "description": "Specifies if \"NAB: Refresh XLF files from g.xlf\" should run when no more trans-units in need of action is found.",
            "scope": "resource"
          },
          "NAB.EnableTranslationsOnHover": {
            "type": "boolean",
            "default": true,
            "description": "Specifies if the translations for any multi language enabled text should be shown when hovering over the line of AL code.",
            "scope": "resource"
          },
          "NAB.Xliff CSV Export Path": {
            "type": "string",
            "default": "",
            "description": "When exporting Xliff as .csv this setting specifies where the files will be created.",
            "scope": "resource"
          },
          "NAB.Xliff CSV Import Target State": {
            "type": "string",
            "default": "translated",
            "description": "Sets how the Target State property should be set when importing from a .csv file into a XLIFF file. Only the State of Targets that has been changed will get updated. This will setting will only be in effect when the setting `Use External Translation Tool` is enabled.",
            "scope": "resource",
            "enum": [
              "(leave)",
              "(from csv)",
              "translated",
              "new",
              "final",
              "needs-review-translation",
              "needs-translation",
              "needs-adaptation",
              "needs-l10n",
              "needs-review-adaptation",
              "needs-review-l10n",
              "signed-off"
            ],
            "enumDescriptions": [
              "Do not change the Target State",
              "Sets the Target State from the CSV file",
              "Sets the Target State to 'translated'",
              "Sets the Target State to 'new'",
              "Sets the Target State to 'final'",
              "Sets the Target State to 'needs-review-translation'",
              "Sets the Target State to 'needs-translation'",
              "Sets the Target State to 'needs-adaptation'",
              "Sets the Target State to 'needs-l10n'",
              "Sets the Target State to 'needs-review-adaptation'",
              "Sets the Target State to 'needs-review-l10n'",
              "Sets the Target State to 'signed-off'"
            ]
          },
          "NAB.PreferLockedTranslations": {
            "type": "boolean",
            "default": true,
            "description": "Specifies if \"NAB: Refresh XLF files from g.xlf\" should be opinionated about locked translations e.g. when both source and target consists of only whitespace.",
            "scope": "resource"
          },
          "NAB.TranslationFilenamePattern": {
            "type": "string",
            "default": "*.xlf",
            "description": "Specifies a filename pattern for the translation xliff files. This could be useful to change if the Translation folder contains translations for other apps.",
            "scope": "resource"
          },
          "NAB.ignoreMissingTransUnitsOnImport": {
            "type": "boolean",
            "default": false,
            "description": "Specifies if missing translation units should be ignored when importing translations from a .csv file into a XLIFF file. If this is disabled, an error will be shown if a translation unit is missing in the XLIFF file.",
            "scope": "resource"
          },
          "NAB.importTranslationWithDifferentSource": {
            "type": "boolean",
            "default": false,
            "description": "Specifies if translation units with different source text should be allowed when importing translations from a .csv file into a XLIFF file. If this is disabled, an error will be shown if a translation unit with a different source text is found in the XLIFF file.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Documentation",
        "properties": {
          "NAB.TooltipDocsIgnorePageExtensionIds": {
            "type": "array",
            "default": [],
            "pattern": "^[0-9]+$",
            "patternErrorMessage": "Only numerical Object Id numbers are allowed in the array",
            "description": "An array of the Ids of the Page Extensions that should be ignored when generating ToolTip documentation",
            "scope": "resource"
          },
          "NAB.TooltipDocsIgnorePageIds": {
            "type": "array",
            "default": [],
            "pattern": "^[0-9]+$",
            "patternErrorMessage": "Only numerical Object Id numbers are allowed in the array",
            "description": "An array of the Ids of the Pages that should be ignored when generating ToolTip documentation",
            "scope": "resource"
          },
          "NAB.TooltipDocsFilePath": {
            "type": "string",
            "default": "ToolTips.md",
            "description": "When creating ToolTip documentation, this setting specifies the path and filename of the md file that should be used. Both absolute and relative (to the current workspace folder) can be used.",
            "scope": "resource"
          },
          "NAB.GenerateTooltipDocsWithExternalDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if the ToolTip file should be created as well.",
            "scope": "resource"
          },
          "NAB.GenerateDeprecatedFeaturesPageWithExternalDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if a page with public obsoleted objects/procedures/controls should be created.",
            "scope": "resource"
          },
          "NAB.IgnoreTransUnitInGeneratedDocumentation": {
            "type": "array",
            "default": [],
            "description": "When documentations, as ToolTip documentation, is created - Any trans-unit ids specified in this setting is omitted.",
            "scope": "resource"
          },
          "NAB.DocsRootPath": {
            "type": "string",
            "default": "docs",
            "description": "When creating external documentation, this setting specifies where all md files will be created. Both absolute and relative (to the current workspace folder) can be used.",
            "scope": "resource"
          },
          "NAB.CreateTocFilesForDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if TOC (table of contents) files should be created.",
            "scope": "resource"
          },
          "NAB.documentation.output.indexFile": {
            "type": "boolean",
            "default": false,
            "description": "When creating external documentation, this setting specifies if an index.md file should be created with links to other pages.",
            "scope": "resource"
          },
          "NAB.documentation.output.indexFilePath": {
            "type": "string",
            "default": "./index.md",
            "description": "When creating the index file, this setting specifies the name and path of the index file. By default the file will be named index.md and placed in the root of the Docs folder (specified by the NAB.DocsRootPath setting). The path must be relative to the Docs folder and must include the filename.",
            "scope": "resource"
          },
          "NAB.documentation.output.indexFileDepth": {
            "type": "integer",
            "default": 2,
            "description": "When creating the index file for external documentation, this setting specifies the number of levels for the links.",
            "scope": "resource",
            "minimum": 1
          },
          "NAB.IncludeTablesAndFieldsInDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if all tables and fields should be included. If not enabled, only tables with public (or any, if `NAB.documentation.includeAllProcedures` is enabled) procedures will be included.",
            "scope": "resource"
          },
          "NAB.documentation.includeAllProcedures": {
            "type": "boolean",
            "default": false,
            "description": "When creating external documentation, this setting specifies if all procedures should be included. If not enabled, only public procedures will be included.",
            "scope": "resource"
          },
          "NAB.documentation.includeReports": {
            "type": "boolean",
            "default": false,
            "description": "When creating external documentation, this setting specifies if Reports should be included. If not enabled, only Reports with public (or any, if `NAB.documentation.includeAllProcedures` is enabled) procedures will be included.",
            "scope": "resource"
          },
          "NAB.documentation.includeXmlPorts": {
            "type": "boolean",
            "default": false,
            "description": "When creating external documentation, this setting specifies if XmlPorts should be included. If not enabled, only XmlPorts with public (or any, if `NAB.documentation.includeAllProcedures` is enabled) procedures will be included.",
            "scope": "resource"
          },
          "NAB.documentation.includeQueries": {
            "type": "boolean",
            "default": false,
            "description": "When creating external documentation, this setting specifies if Queries should be included. If not enabled, only Queries with public (or any, if `NAB.documentation.includeAllProcedures` is enabled) procedures will be included.",
            "scope": "resource"
          },
          "NAB.documentation.api.IncludeDataType": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if the data types of fields on API pages should be included. The Data Type will only be available if the field source is a table field or a global variable.",
            "scope": "resource"
          },
          "NAB.CreateInfoFileForDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if an info.json file should be created. This file will contain version info, creation date etc.",
            "scope": "resource"
          },
          "NAB.CreateUidForDocs": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if an UID should be created in a Yaml Header in each generated md file. The UID can then be used for linking in DocFx.",
            "scope": "resource"
          },
          "NAB.documentation.yamlTitle.enabled": {
            "type": "boolean",
            "default": true,
            "description": "When creating external documentation, this setting specifies if a title should be created in a Yaml Header in each generated md file.",
            "scope": "resource"
          },
          "NAB.documentation.yamlTitle.prefix": {
            "type": "string",
            "default": "",
            "description": "When creating external documentation, this setting specifies a prefix to the YAML title created in the Yaml Header in each generated md file. This settings is only used if the 'NAB.documentation.yamlTitle.enabled' setting is enabled. The special containers {appName}, {publisher} and {version} can be used in this setting, they will be replaced by the values from app.json when the title is created.",
            "scope": "resource"
          },
          "NAB.documentation.yamlTitle.suffix": {
            "type": "string",
            "default": " | {appName}",
            "description": "When creating external documentation, this setting specifies a suffix to the YAML title created in the Yaml Header in each generated md file. This settings is only used if the 'NAB.documentation.yamlTitle.enabled' setting is enabled. The special containers {appName}, {publisher} and {version} can be used in this setting, they will be replaced by the values from app.json when the title is created.",
            "scope": "resource"
          },
          "NAB.RemoveObjectNamePrefixFromDocs": {
            "type": "string",
            "default": "",
            "description": "When creating external documentation, this setting will remove the specified prefix from the md files. I.e. if your objects are prefixed with \"ABC \", you set this setting to \"ABC\" and that will be removed from the object names in the md files.",
            "scope": "resource"
          },
          "NAB.DocsIgnorePaths": {
            "type": "array",
            "default": [
              "**\\TestApp\\**"
            ],
            "description": "When documentation are created from al files, the files that matches the patterns specified in this setting will be ignored. The paths should use glob pattern.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Signing",
        "properties": {
          "NAB.SigningCertificateName": {
            "type": "string",
            "default": "",
            "description": "The name of the certificate used for signing app files",
            "scope": "resource"
          },
          "NAB.SigningTimeStampServer": {
            "type": "string",
            "default": "http://timestamp.digicert.com",
            "description": "Specifies the URL of the time stamp server used for signing app files",
            "scope": "resource"
          },
          "NAB.SignToolPath": {
            "type": "string",
            "default": "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.16299.0\\x86\\signtool.exe",
            "description": "The full path to signtool.exe, used for signing app files",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Advanced",
        "properties": {
          "NAB.ConsoleLogOutput": {
            "type": "boolean",
            "default": false,
            "description": "If enabled log statements will be printed to console.",
            "scope": "resource",
            "deprecationMessage": "This setting is not used anymore, do not use."
          },
          "NAB.LoadSymbols": {
            "type": "boolean",
            "default": true,
            "description": "Specifies if symbols should be loaded from the .alpackages folder. This is used when documentation is generated, ToolTips are added etc.",
            "scope": "resource"
          },
          "NAB.EnableTroubleshootingCommands": {
            "type": "boolean",
            "default": false,
            "description": "Specifies if troubleshooting commands for NAB AL Tools should be visible in the command palette. When you have enabled this setting, search for 'NAB: Troubleshooting' to find the enabled commands.",
            "scope": "application"
          },
          "NAB.EnableXliffCache": {
            "type": "boolean",
            "default": true,
            "description": "Specifices if XliffCache should be used when reading xlf-files. This is intended to boost performance in some operations. If you are noticing incorrect and unexpected results in Xliff related operations try disabling this setting.",
            "scope": "resource"
          }
        }
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "*.dts.json",
        "url": "./syntaxes/dtsDictionarySyntax.json"
      },
      {
        "fileMatch": "al.template.json",
        "url": "./syntaxes/templateSettingsSyntax.json"
      }
    ],
    "languageModelTools": [
      {
        "name": "refreshXlf",
        "displayName": "Refresh an XLF file from a generated XLF file",
        "modelDescription": "This tool refreshes and synchronizes a XLF language file using the generated XLF file. It takes two parameters: the path to the generated XLF file (named <appname>.g.xlf) and the path to the target XLF file to be refreshed. The tool synchronizes the target XLF file with the latest changes from the generated file by preserving existing translations while adding new translation units from the generated file. It maintains the state of translated units and sorts the file according to the g.xlf structure. This synchronization process ensures that the translation file stays up-to-date with the latest AL code changes without losing existing translation work.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool refreshes a XLF language file using a generated XLF file (g.xlf).",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-refreshXlf",
        "inputSchema": {
          "type": "object",
          "properties": {
            "generatedXlfFilePath": {
              "type": "string",
              "description": "The absolute path to the generated XLF file. The file is named '[app name].g.xlf', and the app name can be found in the app.json file. Example: For the app called 'My App', the generated Xlf file will be named 'My App.g.xlf'. This file is found in the Translations folder, which is the same folder as the target XLF file. This g.xlf file is automatically created and/or updated during AL compilation. Note that this file is often added to .gitignore, so you may need to show hidden and ignored files to find it."
            },
            "filePath": {
              "type": "string",
              "description": "The absolute path to the XLF file to refresh"
            }
          },
          "required": [
            "generatedXlfFilePath",
            "filePath"
          ]
        }
      },
      {
        "name": "getTextsToTranslate",
        "displayName": "Get texts to translate from an XLF file",
        "modelDescription": "This tool retrieves untranslated texts from a specified XLF file. It returns a JSON array of objects containing: id (unique identifier), source text (to be translated), source language, type (describes the context of what is being translated, such as 'Table Customer - Field Name - Property Caption' or 'Page Sales Order - Action Post - Property Caption'), maxLength (character limit if applicable), and contextual comments (explains placeholders like %1, %2, %3 etc.). The type field provides crucial context by identifying the specific AL object (table, page, codeunit, etc.), element (field, action, control), and property (caption, tooltip, etc.) being translated, enabling more accurate and contextually appropriate translations. This tool streamlines the translation workflow by identifying which texts need translation and providing comprehensive context for accurate localization.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool retrieves untranslated texts from a specified XLF file.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-getTextsToTranslate",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The absolute path to the XLF file from which untranslated texts will be extracted."
            },
            "offset": {
              "type": "number",
              "description": "The starting position (zero-based index) for retrieving results. Used for pagination to skip a specific number of translation units before returning results."
            },
            "limit": {
              "type": "number",
              "description": "The maximum number of untranslated texts to return. Set to 0 to retrieve all available texts."
            },
            "sourceLanguageFilePath": {
              "type": "string",
              "description": "Optional. The absolute path to an alternative source language file. When specified, target texts from this file will be used as 'source' in the response. Useful for translating between similar languages (e.g., Swedish, Danish, Norwegian) instead of always using en-US as the source."
            }
          },
          "required": [
            "filePath",
            "limit"
          ]
        }
      },
      {
        "name": "getTranslatedTextsMap",
        "displayName": "Get Translated Texts Map from an XLF file",
        "modelDescription": "This tool retrieves previously translated texts from a specified XLF file as a translation map. It returns a JSON array of translation objects, each containing: sourceText (the original text), targetTexts (an array of one or more translated versions), and sourceLanguage. This unique format groups all translations by their source text, which is particularly useful when the same source text has been translated differently in various contexts or has multiple acceptable translations. For example: {'sourceText': 'Total', 'targetTexts': ['Total', 'Totalt'], 'sourceLanguage': 'en-US'}. This tool helps maintain translation consistency by providing access to existing translation patterns and terminology variations, allowing you to reference previously translated phrases and understand translation choices when working on new content.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool retrieves translated texts from a specified XLF file.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-getTranslatedTextsMap",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The absolute path to the XLF file from which to retrieve translated texts. This file should contain translation units with completed target elements."
            },
            "offset": {
              "type": "number",
              "description": "The starting position (zero-based index) for retrieving results. Used for pagination to skip a specific number of translation units before returning results."
            },
            "limit": {
              "type": "number",
              "description": "The maximum number of translated texts to return in a single request. Controls result set size for pagination. Set to 0 to retrieve all available translations."
            },
            "sourceLanguageFilePath": {
              "type": "string",
              "description": "Optional. The absolute path to an alternative source language file. When specified, target texts from this file will be used as 'source' in the response. Particularly useful when translating between similar languages (e.g., Swedish, Danish, Norwegian) instead of always using en-US as the source."
            }
          },
          "required": [
            "filePath",
            "limit"
          ]
        }
      },
      {
        "name": "getTextsByKeyword",
        "displayName": "Get Texts By Keyword from an XLF file",
        "modelDescription": "This tool searches source or target texts in a specified XLF file for a given keyword or regular expression and returns matching translation units. By default, it searches in source texts (includes untranslated units). When searchInTarget is true, it searches only in target texts (excludes untranslated units). Use this to discover how a specific word or phrase is used across the application and to inspect how it has been translated in different contexts.",
        "tags": [
          "dynamics-365"
        ],
        "userDescription": "(beta) Search source or target texts by keyword or regex in an XLF file. Use this to discover where a word or phrase appears and how it has been translated across contexts.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-getTextsByKeyword",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The absolute path to the XLF file to search."
            },
            "offset": {
              "type": "number",
              "description": "The starting position (zero-based index) for retrieving results. Used for pagination to skip a specific number of translation units before returning results."
            },
            "limit": {
              "type": "number",
              "description": "The maximum number of texts to return in a single request. Set to 0 to retrieve all available translations."
            },
            "keyword": {
              "type": "string",
              "description": "The keyword or regex pattern to search for in the source or target text."
            },
            "caseSensitive": {
              "type": "boolean",
              "description": "Enable case-sensitive matching (default false)."
            },
            "isRegex": {
              "type": "boolean",
              "description": "Treat the 'keyword' parameter as a regular expression (default false)."
            },
            "searchInTarget": {
              "type": "boolean",
              "description": "Search in target text instead of source text (default false). When true, only translated units with matching target text are returned."
            }
          },
          "required": [
            "filePath",
            "limit",
            "keyword"
          ]
        }
      },
      {
        "name": "getTranslatedTextsByState",
        "displayName": "Get Translated Texts By State from an XLF file",
        "modelDescription": "This tool retrieves translated texts from a specified XLF file, filtered by their translation state. It returns a JSON array of objects containing: id (unique identifier), source text, source language, target text, type (describes the context of what is being translated, such as 'Table Customer - Field Name - Property Caption' or 'Page Sales Order - Action Post - Property Caption'), translation state, review reason (if available), maxLength (character limit if applicable), and contextual comments (explains placeholders like %1, %2, %3 etc.). The type field provides crucial context by identifying the specific AL object (table, page, codeunit, etc.), element (field, action, control), and property (caption, tooltip, etc.) being translated, enabling better understanding of existing translations and their business context. This tool streamlines the translation workflow by allowing you to filter translations by their state (e.g., 'needs-review', 'translated', 'final', 'signed-off') and providing comprehensive context for accurate localization.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool retrieves translated texts from a specified XLF file, filtered by their translation state.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-getTranslatedTextsByState",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The absolute path to the XLF file from which to retrieve translated texts. This file should contain translation units with translated target elements."
            },
            "offset": {
              "type": "number",
              "description": "The starting position (zero-based index) for retrieving results. Used for pagination to skip a specific number of translation units before returning results."
            },
            "limit": {
              "type": "number",
              "description": "The maximum number of translated texts to return in a single request. Controls result set size for pagination. Set to 0 to retrieve all available translations."
            },
            "translationStateFilter": {
              "type": "string",
              "description": "The translation state to filter the results by. This can be one of the following: 'needs-review' (returns all translations that need review), 'translated' (completed translations), 'final' (finalized translations), or 'signed-off' (approved translations). If not specified, translations in all states will be returned.",
              "enum": [
                "needs-review",
                "translated",
                "final",
                "signed-off"
              ]
            },
            "sourceText": {
              "type": "string",
              "description": "Optional. Filter results to only include translations that match this exact source text. This is particularly useful for: 1) Finding all translations of a specific phrase or term across different contexts, 2) Reviewing translation consistency for repeated text, 3) Updating all occurrences of a specific source text during translation review. For example, use 'Customer' to find all translations where the source text is exactly 'Customer', or 'Enter a value' to find translations of that specific instruction text."
            },
            "sourceLanguageFilePath": {
              "type": "string",
              "description": "Optional. The absolute path to an alternative source language file. When specified, target texts from this file will be used as 'source' in the response. Particularly useful when translating between similar languages (e.g., Swedish, Danish, Norwegian) instead of always using en-US as the source."
            }
          },
          "required": [
            "filePath",
            "limit"
          ]
        }
      },
      {
        "name": "saveTranslatedTexts",
        "displayName": "Save Translation to an XLF file",
        "modelDescription": "This tool writes translated texts to a specified XLF file. It accepts an array of translation objects, each containing a unique identifier and the translated text to be saved. For optimal performance, submit multiple translations in a single batch rather than making individual calls. This tool enables efficient updating of XLF files with new or revised translations, maintaining the integrity of the XLIFF format while updating only the specified translation units.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool saves a translation to a specified XLF file.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-saveTranslatedTexts",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The absolute path to the existing XLF file where translations should be saved. The file must already contain the translation units with source texts that correspond to the translations being provided."
            },
            "translations": {
              "type": "array",
              "description": "An array of translation objects to be saved to the XLF file. Each object must contain both the unique identifier of the translation unit and the translated text to be inserted.",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier of the translation unit in the XLF file. This ID must match an existing translation unit in the file."
                  },
                  "targetText": {
                    "type": "string",
                    "description": "The translated text to be saved as the target content for the specified translation unit. This will replace any existing target text for the given unit."
                  },
                  "targetState": {
                    "type": "string",
                    "description": "The target state of the translation unit. This can be one of the following: 'needs-review-translation', 'translated', 'final', 'signed-off'. If not specified, the target state will be 'translated' (or nothing, if not working with target states).",
                    "enum": [
                      "needs-review-translation",
                      "translated",
                      "final",
                      "signed-off"
                    ]
                  }
                },
                "required": [
                  "id",
                  "targetText"
                ]
              }
            }
          },
          "required": [
            "filePath",
            "translations"
          ]
        }
      },
      {
        "name": "createLanguageXlf",
        "displayName": "Create Target Language XLF File",
        "modelDescription": "This tool creates a new XLF file for a specified target language based on a generated XLF file. It takes a generated XLF file path (*.g.xlf), a target language code, and optional parameters to match translations from the base app. The tool creates a new XLF file ready for translation, optionally pre-populated with matching translations from Microsoft's base application. This streamlines the localization workflow by providing a foundation for translating AL extensions to new languages.",
        "tags": [
          "xliff",
          "translation",
          "localization",
          "internationalization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) This tool creates a new XLF file for a specified target language.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-createLanguageXlf",
        "inputSchema": {
          "type": "object",
          "properties": {
            "generatedXlfFilePath": {
              "type": "string",
              "description": "The absolute path to the generated XLF file (*.g.xlf) created by AL compilation. This file is found in the Translations folder and is automatically created during AL compilation."
            },
            "targetLanguageCode": {
              "type": "string",
              "description": "Language code for the new XLF file (e.g., 'sv-SE', 'da-DK', 'de-DE')."
            },
            "matchBaseAppTranslation": {
              "type": "boolean",
              "description": "Whether to match translations from the base app (default: true). When enabled, the tool will pre-populate the new XLF file with matching translations from Microsoft's base application."
            }
          },
          "required": [
            "generatedXlfFilePath",
            "targetLanguageCode"
          ]
        }
      },
      {
        "name": "getGlossaryTerms",
        "displayName": "Get Glossary Terminology",
        "modelDescription": "This tool returns glossary terminology pairs for a target language (and optional source language, default en-US) from a built-in glossary, based on Business Central terminology and translations. It outputs a JSON array of objects with 'source', 'target', and 'description'. Usage scenarios: (1) Pre-translation session - fetch glossary to instruct the LLM for consistent terminology. (2) Automated suggestion generation - validate/adjust outputs against approved terms. (3) Review/QA - detect and highlight deviations from glossary entries. (4) Bulk alignment or terminology normalization workflows. (5) Cross-language comparison by specifying a non-default sourceLanguageCode.",
        "tags": [
          "glossary",
          "terminology",
          "translation",
          "localization",
          "al",
          "business-central",
          "dynamics-365"
        ],
        "userDescription": "(beta) Retrieve glossary terminology entries for a specified target language.",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "nab-al-tools-getGlossaryTerms",
        "inputSchema": {
          "type": "object",
          "properties": {
            "targetLanguageCode": {
              "type": "string",
              "description": "Target language code for which glossary entries should be returned.",
              "enum": [
                "en-us",
                "cs-cz",
                "da-dk",
                "de-at",
                "de-ch",
                "de-de",
                "en-au",
                "en-ca",
                "en-gb",
                "en-nz",
                "es-es_tradnl",
                "es-mx",
                "fi-fi",
                "fr-be",
                "fr-ca",
                "fr-ch",
                "fr-fr",
                "is-is",
                "it-ch",
                "it-it",
                "nb-no",
                "nl-be",
                "nl-nl",
                "sv-se"
              ]
            },
            "sourceLanguageCode": {
              "type": "string",
              "description": "Optional source language code (default en-US) used as the source terminology column.",
              "enum": [
                "en-us",
                "cs-cz",
                "da-dk",
                "de-at",
                "de-ch",
                "de-de",
                "en-au",
                "en-ca",
                "en-gb",
                "en-nz",
                "es-es_tradnl",
                "es-mx",
                "fi-fi",
                "fr-be",
                "fr-ca",
                "fr-ch",
                "fr-fr",
                "is-is",
                "it-ch",
                "it-it",
                "nb-no",
                "nl-be",
                "nl-nl",
                "sv-se"
              ]
            }
          },
          "required": [
            "targetLanguageCode"
          ]
        }
      }
    ]
  },
  "extensionDependencies": [],
  "files": [
    "dist",
    "frontend",
    "resources/glossary.tsv",
    "snippets",
    "syntaxes",
    "icon.png",
    "README.md",
    "LICENSE.MD",
    "MCP_SERVER.md",
    "CHANGELOG.md"
  ],
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext .js,.ts",
    "lint:fix": "eslint src --fix --ext .js,.ts .",
    "test": "node ./out/test/runTest.js",
    "pretest:coverage": "npm run test-compile && npm run lint",
    "test:coverage": "node ./out/test/runTest-coverage.js",
    "coverage:report": "npx nyc report --reporter=lcov --reporter=text-summary --check-coverage"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.15.0",
    "@xmldom/xmldom": "^0.7.9",
    "adm-zip": "^0.5.5",
    "applicationinsights": "^2.2.0",
    "compare-versions": "^3.6.0",
    "format-duration": "^1.3.1",
    "graceful-fs": "^4.2.11",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "jsonrepair": "^3.13.0",
    "minimatch": "^3.0.4",
    "node-powershell": "^3.3.1",
    "original-fs": "^1.1.0",
    "replace-in-file": "^6.3.2",
    "semver": "^7.5.2",
    "time-stamp": "^1.1.0",
    "txml": "^4.0.1",
    "uuid": "^8.3.0",
    "zod": "^3.25.74"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@types/adm-zip": "^0.4.34",
    "@types/format-duration": "^1.0.1",
    "@types/glob": "^7.1.3",
    "@types/graceful-fs": "^4.1.9",
    "@types/js-yaml": "^4.0.5",
    "@types/json-schema": "^7.0.15",
    "@types/lodash": "^4.14.168",
    "@types/minimatch": "^3.0.4",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.20.12",
    "@types/node-powershell": "^3.1.1",
    "@types/semver": "^7.3.5",
    "@types/uuid": "^8.3.3",
    "@types/vscode": "^1.102.0",
    "@types/xmldom": "^0.1.30",
    "@typescript-eslint/eslint-plugin": "^4.22.1",
    "@typescript-eslint/parser": "^4.22.1",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^7.26.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-prettier": "3.4.0",
    "glob": "^7.1.7",
    "madge": "^4.0.2",
    "mocha": "^11.1.0",
    "nyc": "^15.1.0",
    "prettier": "2.2.1",
    "ts-loader": "^9.1.2",
    "ts-node": "^10.4.0",
    "typescript": "^4.2.4",
    "webpack": "^5.94.0",
    "webpack-cli": "^4.7.0"
  }
}
